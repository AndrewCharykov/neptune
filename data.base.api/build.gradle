sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
    generated {
        java {
            srcDirs = ['src/generated']
        }
    }
}

configurations {
    datanucleus
}

dependencies {
    compile project(':core.api')
    compile group: 'org.datanucleus', name: 'datanucleus-rdbms', version: '5.2.0-m2'
    compile group: 'org.datanucleus', name: 'datanucleus-jdo-query', version: '5.0.8'
    compile group: 'org.datanucleus', name: 'datanucleus-api-jdo', version: '5.2.0-m2'
    compile group: 'org.datanucleus', name: 'datanucleus-core', version: '5.2.0-m2'
    compile group: 'org.datanucleus', name: 'javax.jdo', version: '3.2.0-m10'
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    compile group: 'org.apache.ant', name: 'ant', version: '1.10.5'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    testCompile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.25.2'
    datanucleus group: 'org.datanucleus', name: 'datanucleus-jdo-query', version: '5.0.8'
}

task enhanceJdoEntities(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'ru.tinkoff.qa.neptune.data.base.api.PersistableEnhancer'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileJava.doLast {
    enhanceJdoEntities.exec()
}

task generateStaticMetamodel(type: JavaCompile, group: 'build', description: 'Generates JDO static metamodel') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.datanucleus
    options.compilerArgs = [
            "-proc:only",
            "-processor", "org.datanucleus.jdo.query.JDOQueryProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileGeneratedJava {
    dependsOn generateStaticMetamodel
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}

clean {
    delete sourceSets.generated.java.srcDirs
}

jar {
    exclude('**/ru/tinkoff/qa/neptune/data/base/api/test/**')
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: 'http://nexus.tcsbank.ru/content/repositories/tcs-qa') {
                authentication(userName: mavenDeployLogin, password: mavenDeployPassword)
            }


            pom.project {
                packaging 'jar'
                name 'data.base.api'
                version version
                url 'https://github.com/TinkoffCreditSystems/neptune'
                developers {
                    developer {
                        name 'Sergey Tikhomirov'
                        email 'tichomirovsergey@gmail.com'
                        url 'https://github.com/TikhomirovSergey'
                        id 'TikhomirovSergey'
                    }
                }
                licenses {
                    license {
                        name 'Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
                scm {
                    url 'https://github.com/TinkoffCreditSystems/neptune'
                    connection 'scm:git:ssh://git@github.com:TinkoffCreditSystems/neptune.git'
                    developerConnection 'scm:git:ssh://git@github.com:TinkoffCreditSystems/neptune.git'
                    tag 'HEAD'
                }
            }
        }
    }
}

task javadocJar(type: Jar) {
    exclude('**/ru/tinkoff/qa/neptune/data/base/api/test/**')
    classifier = 'javadoc'
    from javadoc
}

javadoc {
    exclude('**/ru/tinkoff/qa/neptune/data/base/api/test/**')
}

task sourcesJar(type: Jar) {
    exclude('**/ru/tinkoff/qa/neptune/data/base/api/test/**')
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar, javadocJar, sourcesJar
}

javadoc {
    destinationDir = file("${buildDir}/../../../neptune.documentation/javadocs/$project.name")

    title = "Neptune Data Base Integration API. v$globalVersion"
    options.author true
    options.links 'http://download.oracle.com/javase/9/docs/api/'
    options.addStringOption 'Xdoclint:none', '-quiet'
    options.memberLevel = JavadocMemberLevel.PROTECTED
    options.bottom = "Copyright &copy; 2018 <a href=\"https://www.tinkoff.ru/software/\">Tinkoff.ru Development</a>."
}
